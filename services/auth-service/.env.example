# Auth Service Environment Configuration

# =============================================================================
# DATABASE CONFIGURATION
# =============================================================================
# PostgreSQL connection string for auth service
DATABASE_URL=postgresql://notesverb:your_secure_password_here@localhost:5432/notesverb_auth

# =============================================================================
# SERVER CONFIGURATION
# =============================================================================
PORT=3001
NODE_ENV=development

# =============================================================================
# JWT CONFIGURATION
# =============================================================================
# IMPORTANT: Change these secrets in production!
# Generate strong, random secrets (minimum 256 bits)
# You can use: openssl rand -base64 32
JWT_SECRET=your-super-secret-jwt-key-change-this-in-production
JWT_REFRESH_SECRET=your-super-secret-refresh-key-change-this-in-production

# Token expiration times
JWT_EXPIRES_IN=15m
JWT_REFRESH_EXPIRES_IN=7d

# =============================================================================
# CORS CONFIGURATION
# =============================================================================
# Frontend application URL
CORS_ORIGIN=http://localhost:3000
CORS_CREDENTIALS=true

# =============================================================================
# SECURITY CONFIGURATION
# =============================================================================
# Bcrypt rounds for password hashing (10-12 recommended for production)
BCRYPT_ROUNDS=10

# =============================================================================
# PRODUCTION EXAMPLES (uncomment and modify for production)
# =============================================================================

# Production database URL
# DATABASE_URL=postgresql://username:password@host:port/database_name

# Production JWT secrets (generate strong secrets)
# JWT_SECRET=your-production-jwt-secret-256-bits-minimum
# JWT_REFRESH_SECRET=your-production-refresh-secret-256-bits-minimum

# Production CORS (restrict to your frontend domain)
# CORS_ORIGIN=https://your-frontend-domain.com

# Production security settings
# BCRYPT_ROUNDS=12
# JWT_EXPIRES_IN=5m
# JWT_REFRESH_EXPIRES_IN=1d

# =============================================================================
# DEVELOPMENT CONFIGURATION
# =============================================================================
# Development database (for local development with Docker)
# DATABASE_URL=postgresql://notesverb:notesverb123@localhost:5432/notesverb_auth

# =============================================================================
# TESTING CONFIGURATION
# =============================================================================
# Test database URL (for running tests)
# TEST_DATABASE_URL=postgresql://notesverb:notesverb123@localhost:5432/notesverb_auth_test

# Test JWT secrets (use different secrets for testing)
# TEST_JWT_SECRET=test-jwt-secret-key-for-testing-only
# TEST_JWT_REFRESH_SECRET=test-jwt-refresh-secret-key-for-testing-only

# =============================================================================
# DEVELOPMENT NOTES
# =============================================================================
# 1. Copy this file to .env and update the values
# 2. Never commit .env files to version control
# 3. Use strong, unique secrets in production
# 4. Ensure JWT_SECRET matches across all services that validate tokens
# 5. Use environment-specific database URLs
# 6. Consider using a secrets management service in production
