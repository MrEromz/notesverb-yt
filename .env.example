# NotesVerb Environment Configuration Example
# Copy this file to .env and update the values for your environment

# =============================================================================
# GLOBAL CONFIGURATION
# =============================================================================

# Environment
NODE_ENV=development

# Database Configuration (PostgreSQL)
POSTGRES_USER=notesverb
POSTGRES_PASSWORD=your_secure_password_here
POSTGRES_DB=notesverb
POSTGRES_HOST=localhost
POSTGRES_PORT=5432

# =============================================================================
# API GATEWAY CONFIGURATION
# =============================================================================

# API Gateway Server
API_GATEWAY_PORT=8080

# JWT Configuration (for token validation)
JWT_SECRET=your-super-secret-jwt-key-change-this-in-production
JWT_REFRESH_SECRET=your-super-secret-refresh-key-change-this-in-production
JWT_EXPIRES_IN=15m
JWT_REFRESH_EXPIRES_IN=7d

# Service URLs
AUTH_SERVICE_URL=http://localhost:3001
USER_SERVICE_URL=http://localhost:3002
NOTES_SERVICE_URL=http://localhost:3003
TAGS_SERVICE_URL=http://localhost:3004

# CORS Configuration
CORS_ORIGIN=http://localhost:3000
CORS_CREDENTIALS=true

# Logging
LOG_LEVEL=info

# Health Check
HEALTH_CHECK_INTERVAL=30000
HEALTH_CHECK_TIMEOUT=5000

# =============================================================================
# MICROSERVICES CONFIGURATION
# =============================================================================

# Auth Service
AUTH_SERVICE_PORT=3001
AUTH_DATABASE_URL=postgresql://notesverb:your_secure_password_here@localhost:5432/notesverb_auth

# User Service
USER_SERVICE_PORT=3002
USER_DATABASE_URL=postgresql://notesverb:your_secure_password_here@localhost:5432/notesverb_users

# Notes Service
NOTES_SERVICE_PORT=3003
NOTES_DATABASE_URL=postgresql://notesverb:your_secure_password_here@localhost:5432/notesverb_notes

# Tags Service
TAGS_SERVICE_PORT=3004
TAGS_DATABASE_URL=postgresql://notesverb:your_secure_password_here@localhost:5432/notesverb_tags

# =============================================================================
# SECURITY CONFIGURATION
# =============================================================================

# Bcrypt rounds for password hashing
BCRYPT_ROUNDS=12

# Rate limiting
RATE_LIMIT_WINDOW_MS=900000
RATE_LIMIT_MAX_REQUESTS=100

# =============================================================================
# DEVELOPMENT CONFIGURATION
# =============================================================================

# Development database URLs (for local development)
DEV_AUTH_DATABASE_URL=postgresql://notesverb:notesverb123@localhost:5432/notesverb_auth
DEV_USER_DATABASE_URL=postgresql://notesverb:notesverb123@localhost:5432/notesverb_users
DEV_NOTES_DATABASE_URL=postgresql://notesverb:notesverb123@localhost:5432/notesverb_notes
DEV_TAGS_DATABASE_URL=postgresql://notesverb:notesverb123@localhost:5432/notesverb_tags

# =============================================================================
# PRODUCTION CONFIGURATION (Examples)
# =============================================================================

# Production JWT secrets (generate strong secrets for production)
# PROD_JWT_SECRET=your-production-jwt-secret-256-bits-minimum
# PROD_JWT_REFRESH_SECRET=your-production-refresh-secret-256-bits-minimum

# Production database URLs (use environment-specific values)
# PROD_AUTH_DATABASE_URL=postgresql://username:password@host:port/database
# PROD_USER_DATABASE_URL=postgresql://username:password@host:port/database
# PROD_NOTES_DATABASE_URL=postgresql://username:password@host:port/database
# PROD_TAGS_DATABASE_URL=postgresql://username:password@host:port/database

# Production CORS (restrict to your frontend domain)
# PROD_CORS_ORIGIN=https://your-frontend-domain.com

# =============================================================================
# DOCKER CONFIGURATION
# =============================================================================

# Docker Compose overrides
COMPOSE_PROJECT_NAME=notesverb
COMPOSE_FILE=docker-compose.yml

# =============================================================================
# MONITORING & LOGGING (Optional)
# =============================================================================

# Application monitoring
# SENTRY_DSN=your-sentry-dsn-here
# NEW_RELIC_LICENSE_KEY=your-new-relic-key-here

# Log aggregation
# LOGSTASH_HOST=localhost
# LOGSTASH_PORT=5044

# =============================================================================
# TESTING CONFIGURATION
# =============================================================================

# Test database URLs
TEST_AUTH_DATABASE_URL=postgresql://notesverb:notesverb123@localhost:5432/notesverb_auth_test
TEST_USER_DATABASE_URL=postgresql://notesverb:notesverb123@localhost:5432/notesverb_users_test
TEST_NOTES_DATABASE_URL=postgresql://notesverb:notesverb123@localhost:5432/notesverb_notes_test
TEST_TAGS_DATABASE_URL=postgresql://notesverb:notesverb123@localhost:5432/notesverb_tags_test

# Test JWT secrets (use different secrets for testing)
TEST_JWT_SECRET=test-jwt-secret-key-for-testing-only
TEST_JWT_REFRESH_SECRET=test-jwt-refresh-secret-key-for-testing-only
